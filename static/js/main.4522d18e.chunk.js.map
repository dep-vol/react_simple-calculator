{"version":3,"sources":["components/App/App.module.css","components/Popup/Popup.module.css","components/App/App.js","components/Popup/Popup.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","inpValue","lastOp","makeResult","result","input","eval","push","setState","e","onChangeInp","value","target","checkInp","onEnterPress","key","onCalcElClick","el","wrongs","test","some","includes","isNaN","parseInt","onChangeDisplay","clearOpList","makeBackspace","slice","elements","id","elClass","onClick","display","React","createRef","prevProps","prevState","snapshot","this","current","focus","calcElems","map","type","className","styles","onChange","onKeyPress","autoFocus","ref","main","calc","msg","clear","Component","msgs","i","popup","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4522d18e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__w13HL\",\"calc\":\"App_calc__12swb\",\"clear\":\"App_clear__1kMBX\",\"back\":\"App_back__moydi\",\"display\":\"App_display__C-9pl\",\"seven\":\"App_seven__3Knmo\",\"eight\":\"App_eight__3m0Ig\",\"nine\":\"App_nine__1y7_r\",\"divide\":\"App_divide__10p94\",\"four\":\"App_four__LcufG\",\"five\":\"App_five__1Hj6h\",\"six\":\"App_six__Ml7mk\",\"multiply\":\"App_multiply__18tQq\",\"one\":\"App_one__1-xYM\",\"two\":\"App_two__3oig_\",\"three\":\"App_three__RKV7f\",\"zero\":\"App_zero__2Arvd\",\"minus\":\"App_minus__1qzsB\",\"dot\":\"App_dot__2gL7P\",\"equal\":\"App_equal__1qlVY\",\"plus\":\"App_plus__2hqxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__3TSql\",\"clear\":\"Popup_clear__3Xkok\"};","import React from 'react';\nimport styles from './App.module.css';\nimport Popup from \"../Popup/Popup\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.display = React.createRef();\n  }\n  state = {\n    inpValue : '',\n    lastOp : []\n  };\n  makeResult = () => {\n    let result;\n    let input = {...this.state};\n\n    try {\n      result =  eval(this.state.inpValue);\n      input.lastOp.push(input.inpValue);\n      input.inpValue = result;\n      this.setState(input);\n    }\n    catch (e) {\n\n    }\n\n  }\n  onChangeInp = (e) => {\n    let value = e.target.value;\n\n    if (this.checkInp(value)) {\n      this.setState({inpValue: value})\n    } else {\n      return null\n    }\n  }\n  onEnterPress = (e) => {\n    if (e.key==='Enter') {\n      this.makeResult()\n    }\n  }\n  onCalcElClick = (el) => {\n    let input = {...this.state};\n    input.inpValue += el;\n    if (this.checkInp(input.inpValue)) this.setState(input);\n  };\n  checkInp = (value) => {\n    const regCheck = /^[\\d+\\-/*().]+$/;\n    const wrongs = ['--','++','**','//','-+','-*','-/','+-','+*','+/','/*','/-','/+','*-','*+','*/','..'];\n    const checkWrongs = ()=> {\n      return wrongs.some(el=>value.includes(el))\n    }\n    return regCheck.test(value) & !checkWrongs() & !isNaN(parseInt(value))\n  }\n  onChangeDisplay = (el) => {\n    let input = {...this.state};\n    input.inpValue = el;\n    this.setState(input)\n  }\n  clearOpList = () => {\n    let lastOp = [];\n    this.setState({lastOp})\n  }\n  makeBackspace = () => {\n    let input = {...this.state}\n    input.inpValue = input.inpValue.slice(0,-1);\n    this.setState(input);\n  }\n  elements = [\n    {\n      id:1,\n      el:'AC',\n      elClass: 'clear',\n      onClick: ()=>{\n        let input = {...this.state};\n        input.inpValue = '';\n        this.setState(input)\n      }\n    },\n    {\n      id:2,\n      el:'Back',\n      elClass: 'back',\n      onClick: ()=>this.makeBackspace()\n    },\n    {\n      id:3,\n      el:' ',\n      elClass: 'display'\n    },\n    {\n      id:4,\n      el:'7',\n      elClass: 'seven'\n    },\n    {\n      id:5,\n      el:'8',\n      elClass: 'eight'\n    },\n    {\n      id:6,\n      el:'9',\n      elClass: 'nine'\n    },\n    {\n      id:7,\n      el:'/',\n      elClass: 'divide'\n    },\n    {\n      id:8,\n      el:'4',\n      elClass: 'four'\n    },\n    {\n      id:9,\n      el:'5',\n      elClass: 'five'\n    },\n    {\n      id:10,\n      el:'6',\n      elClass: 'six'\n    },\n    {\n      id:11,\n      el:'*',\n      elClass: 'multiply'\n    },\n    {\n      id:12,\n      el:'1',\n      elClass: 'one'\n    },\n    {\n      id:13,\n      el:'2',\n      elClass: 'two'\n    },\n    {\n      id:14,\n      el:'3',\n      elClass: 'three'\n    },\n    {\n      id:15,\n      el:'-',\n      elClass: 'minus'\n    },\n    {\n      id:16,\n      el:'0',\n      elClass: 'zero'\n    },\n    {\n      id:17,\n      el:'.',\n      elClass: 'dot'\n    },\n    {\n      id:18,\n      el:'=',\n      elClass: 'equal',\n      onClick: this.makeResult\n    },\n    {\n      id:19,\n      el:'+',\n      elClass: 'plus'\n    }\n  ];\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.display.current.focus()\n  }\n\n  render() {\n\n    const calcElems = this.elements.map((el) => {\n      if (el.elClass === 'display') {\n        return <input type='text' key={el.id+el.el}\n                      className={styles[el.elClass]}\n                      value = {this.state.inpValue}\n                      onChange={(e)=>this.onChangeInp(e)}\n                      onKeyPress={(e)=>this.onEnterPress(e)}\n                      autoFocus\n                      ref={this.display}/>\n      }\n      else {\n        return (\n          <div key={el.id+el.el}\n               className={styles[el.elClass]}\n               onClick={el.onClick ? el.onClick : ()=>this.onCalcElClick(el.el)}\n          >{el.el}</div>\n        )\n      }\n\n    })\n    return (\n      <>\n        <div className={styles.main}>\n          <div className={styles.calc}>\n            {calcElems}\n          </div>\n        </div>\n        <Popup msg={this.state.lastOp} onChange = {this.onChangeDisplay} clear = {this.clearOpList} />\n      </>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport styles from './Popup.module.css';\n\nexport default function (props) {\n  const {msg, onChange, clear} = props;\n  const changeInput = (val) => {\n    onChange(val);\n  }\n\n  const msgs = msg.map((el,i) => {\n    return (\n      <p key={i+el} onClick={()=>changeInput(el)}>{`${i+1}. ${el}`}</p>\n    )\n  })\n\n  return (\n    <div className={styles.popup}>\n      {msgs}\n      <div className={styles.clear} onClick={clear} >CLEAR</div>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}